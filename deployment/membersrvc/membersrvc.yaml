# CA server parameters
#
server:

        # limits the number of operating system threads used by the CA
        # set to negative to use the system default setting
        gomaxprocs: -1

        # path to the OBC state directory and CA state subdirectory
        rootpath: '/var/hyperledger'
        cadir: ".membersrvc"

        # port the CA services are listening on
        port: ":8002"

        # TLS certificate and key file paths
        tls:
            cert:
                file: '/var/hyperledger/membersrvc.crt'
            key:
                file: '/var/hyperledger/membersrvc.key'

security:
    # Either 256 or 384   (note: must be the exact same value as specified in the core.yaml file)
    level: 256

    # Either SHA2 or SHA3 (note: must be the exact same value as specified in the core.yaml file)
    hashAlgorithm: SHA3

    # The server host CN (Common Name) to be used (needs to match the TLS Server Certificate)
    serverhostoverride: member.blackpai.com

    # Boolean (true/false) value indicating whether TLS should be used between the client and
    # the various CA services (ECA, TCA, TLSCA, ACA)
    tls_enabled: true

    # A PEM-encoded (X509 v3, Base64) certificate to use for establishing the TLS connection
    # between the client and the ACA service
    client:
       cert:
           file: '/var/hyperledger/ca.crt'


# Enabling/disabling different logging levels of the CA.
#
logging:

# Please see fabric/docs/Setup/logging-control.md for more
# options.
    server: debug
    ca: debug
    eca: debug
    ecap: debug
    ecaa: debug
    aca: debug
    acap: debug
    tca: debug
    tcap: debug
    tcaa: debug
    tlsca: debug

# Default users to be registered with the CA on first launch.  The role is a binary OR
# of the different roles a user can have:
#
# - simple client such as a wallet: CLIENT
# - non-validating peer: PEER
# - validating client: VALIDATOR
# - auditing client: AUDITOR
#
eca:
        # This hierarchy is used to create the Pre-key tree, affiliations is the top of this hierarchy, 'banks_and_institutions' is used to create the key associated to auditors of both banks and
        # institutions, 'banks' is used to create a key associated to auditors of banks, 'bank_a' is used to create a key associated to auditors of bank_a, etc.
        affiliations:
              network_attendance:
                  abchain:
                      - abchainHQ
        users:
                #
                # The fields of each user are as follows:
                #    <EnrollmentID>: <system_role (1:client, 2: peer, 4: validator, 8: auditor)> <EnrollmentPWD> <Affiliation> <Affiliation_Role> <JSON_Metadata>
                #
                # The optional JSON_Metadata field is of the following format:
                #   { "registrar": { "roles": <array-of-role-names>, "delegateRoles": <array-of-role-names> } }
                # The 'registrar' section is used to control access to registration of new users directly via the ECAA.RegisterUser GRPC call.
                # (See the 'fabric/membersrvc/protos/ca.proto' file for the definition of ECAA.RegisterUser.)
                # Note that this also controls who can register users via the client SDK.
                #
                # Only users with a 'registrar' section may be a registrar to register other users.  In particular,
                # 1) the "roles" field specifies which member roles may be registered by this user, and
                # 2) the "delegateRoles" field specifies which member roles may become the "roles" field of registered users.
                # The valid role names are "client", "peer", "validator", and "auditor".
                #
                # Example1:
                #    The 'admin' user below can register clients, peers, validators, or auditors; furthermore, the 'admin' user can register other
                #    users who can then register clients only.
                #
                # Example2:
                #    The 'WebAppAdmin' user below can register clients only, but none of the users registered by this user can register other users.
                #
                admin: 1 ljKhxRApAKn33XH3tM3o abchainHQ '{"registrar":{"roles":["client","peer","validator","auditor"],"delegateRoles":["client"]}}'

                # Users for asset transfer with roles test located at
                # sdk/node/test/unit/asset-mgmt-with-roles.js
                admin1: 1 54XTS1wnfbwx abchainHQ
                admin2: 1 N7Uvde6cXuO1 abchainHQ

                up1: 1 7IbNUlLPF7yP abchainHQ
                up2: 1 Kn8KYO8b6uUW abchainHQ
                up3: 1 eIRF1OHIYl8v abchainHQ
                up4: 1 TSRWjSzaA9Du abchainHQ
                up5: 1 d0kqrMQfxmbY abchainHQ

                user1: 1 EcEeDZw8Jf8J abchainHQ
                user2: 1 2BIxgSIGAXh3 abchainHQ
                user3: 1 ThQuv0HUq85i abchainHQ
                user4: 1 Fy2F5kPjv51i abchainHQ
                user5: 1 u291CHW8ZHxL abchainHQ
                user6: 1 8hXBVx1ILTrd abchainHQ
                user7: 1 jPVqdsB0yGsp abchainHQ
                user8: 1 1eNb5Th2BRSn abchainHQ
                user9: 1 9SUNCLxFd0qi abchainHQ
                user10: 1 5WLHunLIymOv abchainHQ

                vp0: 4 lCShL53o15QT
                vp1: 4 8YkcfaPFUpZ8
                vp2: 4 v2lF8Q2oA6mv
                vp3: 4 509wqvz27TXd
                vp4: 4 UdC1mYOJaQXf
                vp5: 4 5LLAD3pEA6Kn
                vp6: 4 UxAjJ4ii5864
                vp7: 4 MlrobyisoHF3
                vp8: 4 xPh0EFjOdp2P
                vp9: 4 I8faQabPSfPd
                vp10: 4 mRCiI6w4WIJg

                nvp0: 2 TQz4j7trvodH abchainHQ
                nvp1: 2 eq6HMHqx4ET8 abchainHQ
                nvp2: 2 sOxHIjW6ZHZf abchainHQ
                nvp3: 2 4i2bHdt2DHMA abchainHQ
                nvp4: 2 c5tuL0eH8F8p abchainHQ
                nvp5: 2 x5dC1Pp3xuGT abchainHQ
                nvp6: 2 x1ytOeyNR0oR abchainHQ
                nvp7: 2 aIbw5CtIE23W abchainHQ
                nvp8: 2 7qTKdOdQ6Nwr abchainHQ
                nvp9: 2 bvqex1Y7Hzhr abchainHQ
                nvp10: 2 z06VjTcO0Onq abchainHQ

tca:
          # Enabling/disabling attributes encryption, currently false is unique possible value due attributes encryption is not yet implemented.
          attribute-encryption:
                 enabled: false
aca:
          # Attributes is a list of the valid attributes to each user, attribute certificate authority is emulated temporarily using this file entries.
          # In the future an external attribute certificate authority will be invoked. The format to each entry is:
          #
          #     attribute-entry-#:{userid};{affiliation};{attributeName};{attributeValue};{valid from};{valid to}
          #
          # If valid to is empty the attribute never expire, if the valid from is empty the attribute is valid from the time zero.
          attributes:
              attribute-entry-0: admin1;abchainHQ;Role;Admin;2017-01-01T00:00:00-03:00;;
              attribute-entry-1: admin2;abchainHQ;Role;Admin;2017-01-01T00:00:00-03:00;;

              attribute-entry-2: user1;abchainHQ;Role;User;2017-01-01T00:00:00-03:00;;
              attribute-entry-3: user1;abchainHQ;Region;abchain1;2017-01-01T00:00:00-03:00;;
              attribute-entry-4: user2;abchainHQ;Role;User;2017-01-01T00:00:00-03:00;;
              attribute-entry-5: user2;abchainHQ;Region;abchain2;2017-01-01T00:00:00-03:00;;
              attribute-entry-6: user3;abchainHQ;Role;User;2017-01-01T00:00:00-03:00;;
              attribute-entry-7: user3;abchainHQ;Region;abchain3;2017-01-01T00:00:00-03:00;;
              attribute-entry-8: user4;abchainHQ;Role;User;2017-01-01T00:00:00-03:00;;
              attribute-entry-9: user4;abchainHQ;Region;abchain4;2017-01-01T00:00:00-03:00;;
              attribute-entry-10: user5;abchainHQ;Role;User;2017-01-01T00:00:00-03:00;;
              attribute-entry-11: user5;abchainHQ;Region;abchain5;2017-01-01T00:00:00-03:00;;

          address: member.abchain.org:8002
          # not used in fact (overrided by security.serverhostoverride when tls is enabled)
          server-name: member.abchain.org
          # Enabling/disabling Attribute Certificate Authority, if ACA is enabled attributes will be added into the TCert.
          enabled: true
pki:
          ca:
                 subject:
                         organization: Abchain.
                         country: CN
