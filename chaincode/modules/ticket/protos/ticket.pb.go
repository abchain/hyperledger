// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ticket.proto

package ccauthprotos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	protos "hyperledger.abchain.org/protos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ticket struct {
	Owner                *protos.TxAddr `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Id                   []byte         `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	TicketCat            int32          `protobuf:"varint,3,opt,name=ticketCat,proto3" json:"ticketCat,omitempty"`
	Desc                 string         `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Ticket) Reset()         { *m = Ticket{} }
func (m *Ticket) String() string { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()    {}
func (*Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{0}
}

func (m *Ticket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticket.Unmarshal(m, b)
}
func (m *Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticket.Marshal(b, m, deterministic)
}
func (m *Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticket.Merge(m, src)
}
func (m *Ticket) XXX_Size() int {
	return xxx_messageInfo_Ticket.Size(m)
}
func (m *Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_Ticket proto.InternalMessageInfo

func (m *Ticket) GetOwner() *protos.TxAddr {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Ticket) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Ticket) GetTicketCat() int32 {
	if m != nil {
		return m.TicketCat
	}
	return 0
}

func (m *Ticket) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type ApplyTicket struct {
	Owner                *protos.TxAddr `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Id                   []byte         `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ApplyTicket) Reset()         { *m = ApplyTicket{} }
func (m *ApplyTicket) String() string { return proto.CompactTextString(m) }
func (*ApplyTicket) ProtoMessage()    {}
func (*ApplyTicket) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{1}
}

func (m *ApplyTicket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyTicket.Unmarshal(m, b)
}
func (m *ApplyTicket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyTicket.Marshal(b, m, deterministic)
}
func (m *ApplyTicket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyTicket.Merge(m, src)
}
func (m *ApplyTicket) XXX_Size() int {
	return xxx_messageInfo_ApplyTicket.Size(m)
}
func (m *ApplyTicket) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyTicket.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyTicket proto.InternalMessageInfo

func (m *ApplyTicket) GetOwner() *protos.TxAddr {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *ApplyTicket) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type QueryTicket struct {
	Owner                *protos.TxAddr `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Id                   []byte         `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *QueryTicket) Reset()         { *m = QueryTicket{} }
func (m *QueryTicket) String() string { return proto.CompactTextString(m) }
func (*QueryTicket) ProtoMessage()    {}
func (*QueryTicket) Descriptor() ([]byte, []int) {
	return fileDescriptor_98a6c21780e82d22, []int{2}
}

func (m *QueryTicket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTicket.Unmarshal(m, b)
}
func (m *QueryTicket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTicket.Marshal(b, m, deterministic)
}
func (m *QueryTicket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTicket.Merge(m, src)
}
func (m *QueryTicket) XXX_Size() int {
	return xxx_messageInfo_QueryTicket.Size(m)
}
func (m *QueryTicket) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTicket.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTicket proto.InternalMessageInfo

func (m *QueryTicket) GetOwner() *protos.TxAddr {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *QueryTicket) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func init() {
	proto.RegisterType((*Ticket)(nil), "ccauthprotos.Ticket")
	proto.RegisterType((*ApplyTicket)(nil), "ccauthprotos.ApplyTicket")
	proto.RegisterType((*QueryTicket)(nil), "ccauthprotos.QueryTicket")
}

func init() { proto.RegisterFile("ticket.proto", fileDescriptor_98a6c21780e82d22) }

var fileDescriptor_98a6c21780e82d22 = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xc9, 0x4c, 0xce,
	0x4e, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x49, 0x4e, 0x4e, 0x2c, 0x2d, 0xc9,
	0x00, 0x73, 0x8a, 0xa5, 0x84, 0x21, 0xb4, 0x7e, 0x49, 0x45, 0x62, 0x4a, 0x4a, 0x11, 0x44, 0x89,
	0x52, 0x01, 0x17, 0x5b, 0x08, 0x58, 0x8b, 0x90, 0x0a, 0x17, 0x6b, 0x7e, 0x79, 0x5e, 0x6a, 0x91,
	0x04, 0xa3, 0x02, 0xa3, 0x06, 0xb7, 0x11, 0x1f, 0x44, 0x41, 0xb1, 0x5e, 0x48, 0x85, 0x63, 0x4a,
	0x4a, 0x51, 0x10, 0x44, 0x52, 0x88, 0x8f, 0x8b, 0x29, 0x33, 0x45, 0x82, 0x49, 0x81, 0x51, 0x83,
	0x27, 0x88, 0x29, 0x33, 0x45, 0x48, 0x86, 0x8b, 0x13, 0x62, 0xa5, 0x73, 0x62, 0x89, 0x04, 0xb3,
	0x02, 0xa3, 0x06, 0x6b, 0x10, 0x42, 0x40, 0x48, 0x88, 0x8b, 0x25, 0x25, 0xb5, 0x38, 0x59, 0x82,
	0x45, 0x81, 0x51, 0x83, 0x33, 0x08, 0xcc, 0x56, 0x72, 0xe6, 0xe2, 0x76, 0x2c, 0x28, 0xc8, 0xa9,
	0xa4, 0xc4, 0x5a, 0x90, 0x21, 0x81, 0xa5, 0xa9, 0x45, 0x14, 0x19, 0x92, 0xc4, 0x06, 0x56, 0x65,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x95, 0xb6, 0xaa, 0x35, 0x01, 0x00, 0x00,
}
