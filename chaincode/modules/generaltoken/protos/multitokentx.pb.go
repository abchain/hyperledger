// Code generated by protoc-gen-go. DO NOT EDIT.
// source: multitokentx.proto

/*
Package ccprotos is a generated protocol buffer package.

It is generated from these files:
	multitokentx.proto
	tokentx.proto

It has these top-level messages:
	MultiTokenMsg
	SimpleFund
	QueryToken
	QueryTransfer
	QueryGlobal
	BaseToken
	Assign
	FuncRecord
	AccountData
	NonceData
	TokenGlobalData
*/
package ccprotos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MultiTokenMsg struct {
	TokenName string `protobuf:"bytes,1,opt,name=tokenName" json:"tokenName,omitempty"`
	// Types that are valid to be assigned to TokenMsg:
	//	*MultiTokenMsg_Fund
	//	*MultiTokenMsg_Query
	//	*MultiTokenMsg_Assign
	//	*MultiTokenMsg_Init
	TokenMsg isMultiTokenMsg_TokenMsg `protobuf_oneof:"tokenMsg"`
}

func (m *MultiTokenMsg) Reset()                    { *m = MultiTokenMsg{} }
func (m *MultiTokenMsg) String() string            { return proto.CompactTextString(m) }
func (*MultiTokenMsg) ProtoMessage()               {}
func (*MultiTokenMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isMultiTokenMsg_TokenMsg interface {
	isMultiTokenMsg_TokenMsg()
}

type MultiTokenMsg_Fund struct {
	Fund *SimpleFund `protobuf:"bytes,2,opt,name=fund,oneof"`
}
type MultiTokenMsg_Query struct {
	Query *QueryToken `protobuf:"bytes,3,opt,name=query,oneof"`
}
type MultiTokenMsg_Assign struct {
	Assign *Assign `protobuf:"bytes,4,opt,name=assign,oneof"`
}
type MultiTokenMsg_Init struct {
	Init *BaseToken `protobuf:"bytes,5,opt,name=init,oneof"`
}

func (*MultiTokenMsg_Fund) isMultiTokenMsg_TokenMsg()   {}
func (*MultiTokenMsg_Query) isMultiTokenMsg_TokenMsg()  {}
func (*MultiTokenMsg_Assign) isMultiTokenMsg_TokenMsg() {}
func (*MultiTokenMsg_Init) isMultiTokenMsg_TokenMsg()   {}

func (m *MultiTokenMsg) GetTokenMsg() isMultiTokenMsg_TokenMsg {
	if m != nil {
		return m.TokenMsg
	}
	return nil
}

func (m *MultiTokenMsg) GetTokenName() string {
	if m != nil {
		return m.TokenName
	}
	return ""
}

func (m *MultiTokenMsg) GetFund() *SimpleFund {
	if x, ok := m.GetTokenMsg().(*MultiTokenMsg_Fund); ok {
		return x.Fund
	}
	return nil
}

func (m *MultiTokenMsg) GetQuery() *QueryToken {
	if x, ok := m.GetTokenMsg().(*MultiTokenMsg_Query); ok {
		return x.Query
	}
	return nil
}

func (m *MultiTokenMsg) GetAssign() *Assign {
	if x, ok := m.GetTokenMsg().(*MultiTokenMsg_Assign); ok {
		return x.Assign
	}
	return nil
}

func (m *MultiTokenMsg) GetInit() *BaseToken {
	if x, ok := m.GetTokenMsg().(*MultiTokenMsg_Init); ok {
		return x.Init
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MultiTokenMsg) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MultiTokenMsg_OneofMarshaler, _MultiTokenMsg_OneofUnmarshaler, _MultiTokenMsg_OneofSizer, []interface{}{
		(*MultiTokenMsg_Fund)(nil),
		(*MultiTokenMsg_Query)(nil),
		(*MultiTokenMsg_Assign)(nil),
		(*MultiTokenMsg_Init)(nil),
	}
}

func _MultiTokenMsg_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MultiTokenMsg)
	// tokenMsg
	switch x := m.TokenMsg.(type) {
	case *MultiTokenMsg_Fund:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Fund); err != nil {
			return err
		}
	case *MultiTokenMsg_Query:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Query); err != nil {
			return err
		}
	case *MultiTokenMsg_Assign:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Assign); err != nil {
			return err
		}
	case *MultiTokenMsg_Init:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Init); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MultiTokenMsg.TokenMsg has unexpected type %T", x)
	}
	return nil
}

func _MultiTokenMsg_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MultiTokenMsg)
	switch tag {
	case 2: // tokenMsg.fund
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SimpleFund)
		err := b.DecodeMessage(msg)
		m.TokenMsg = &MultiTokenMsg_Fund{msg}
		return true, err
	case 3: // tokenMsg.query
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(QueryToken)
		err := b.DecodeMessage(msg)
		m.TokenMsg = &MultiTokenMsg_Query{msg}
		return true, err
	case 4: // tokenMsg.assign
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Assign)
		err := b.DecodeMessage(msg)
		m.TokenMsg = &MultiTokenMsg_Assign{msg}
		return true, err
	case 5: // tokenMsg.init
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BaseToken)
		err := b.DecodeMessage(msg)
		m.TokenMsg = &MultiTokenMsg_Init{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MultiTokenMsg_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MultiTokenMsg)
	// tokenMsg
	switch x := m.TokenMsg.(type) {
	case *MultiTokenMsg_Fund:
		s := proto.Size(x.Fund)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MultiTokenMsg_Query:
		s := proto.Size(x.Query)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MultiTokenMsg_Assign:
		s := proto.Size(x.Assign)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MultiTokenMsg_Init:
		s := proto.Size(x.Init)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*MultiTokenMsg)(nil), "ccprotos.MultiTokenMsg")
}

func init() { proto.RegisterFile("multitokentx.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0x2d, 0xcd, 0x29,
	0xc9, 0x2c, 0xc9, 0xcf, 0x4e, 0xcd, 0x2b, 0xa9, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x48, 0x4e, 0x06, 0x33, 0x8a, 0xa5, 0x78, 0x51, 0x24, 0x94, 0x5e, 0x31, 0x72, 0xf1, 0xfa, 0x82,
	0xd4, 0x87, 0x80, 0x84, 0x7d, 0x8b, 0xd3, 0x85, 0x64, 0xb8, 0x38, 0xc1, 0x4a, 0xfc, 0x12, 0x73,
	0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x10, 0x02, 0x42, 0x5a, 0x5c, 0x2c, 0x69, 0xa5,
	0x79, 0x29, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x22, 0x7a, 0x30, 0x73, 0xf5, 0x82, 0x33,
	0x73, 0x0b, 0x72, 0x52, 0xdd, 0x4a, 0xf3, 0x52, 0x3c, 0x18, 0x82, 0xc0, 0x6a, 0x84, 0x74, 0xb8,
	0x58, 0x0b, 0x4b, 0x53, 0x8b, 0x2a, 0x25, 0x98, 0xd1, 0x15, 0x07, 0x82, 0x84, 0xc1, 0x36, 0x7a,
	0x30, 0x04, 0x41, 0x14, 0x09, 0x69, 0x71, 0xb1, 0x25, 0x16, 0x17, 0x67, 0xa6, 0xe7, 0x49, 0xb0,
	0x80, 0x95, 0x0b, 0x20, 0x94, 0x3b, 0x82, 0xc5, 0x3d, 0x18, 0x82, 0xa0, 0x2a, 0x84, 0x34, 0xb9,
	0x58, 0x32, 0xf3, 0x32, 0x4b, 0x24, 0x58, 0xc1, 0x2a, 0x85, 0x11, 0x2a, 0x9d, 0x12, 0x8b, 0x53,
	0x61, 0xe6, 0x82, 0x95, 0x38, 0x71, 0x71, 0x71, 0x94, 0x40, 0xbd, 0x96, 0xc4, 0x06, 0x56, 0x65,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x49, 0x7a, 0xac, 0x22, 0x01, 0x00, 0x00,
}
