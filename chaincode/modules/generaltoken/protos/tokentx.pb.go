// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.4.0
// source: tokentx.proto

package ccprotos

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	protos "hyperledger.abchain.org/protos"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type QueryToken_Formats int32

const (
	QueryToken_NUMBER  QueryToken_Formats = 0 //only raw numbers (into bytes)
	QueryToken_ENCODED QueryToken_Formats = 1 //encoded Protobuffer
)

// Enum value maps for QueryToken_Formats.
var (
	QueryToken_Formats_name = map[int32]string{
		0: "NUMBER",
		1: "ENCODED",
	}
	QueryToken_Formats_value = map[string]int32{
		"NUMBER":  0,
		"ENCODED": 1,
	}
)

func (x QueryToken_Formats) Enum() *QueryToken_Formats {
	p := new(QueryToken_Formats)
	*p = x
	return p
}

func (x QueryToken_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryToken_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_tokentx_proto_enumTypes[0].Descriptor()
}

func (QueryToken_Formats) Type() protoreflect.EnumType {
	return &file_tokentx_proto_enumTypes[0]
}

func (x QueryToken_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryToken_Formats.Descriptor instead.
func (QueryToken_Formats) EnumDescriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{1, 0}
}

type SimpleFund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount []byte         `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	To     *protos.TxAddr `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	From   *protos.TxAddr `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *SimpleFund) Reset() {
	*x = SimpleFund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleFund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleFund) ProtoMessage() {}

func (x *SimpleFund) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleFund.ProtoReflect.Descriptor instead.
func (*SimpleFund) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{0}
}

func (x *SimpleFund) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *SimpleFund) GetTo() *protos.TxAddr {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SimpleFund) GetFrom() *protos.TxAddr {
	if x != nil {
		return x.From
	}
	return nil
}

type QueryToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format QueryToken_Formats `protobuf:"varint,1,opt,name=format,proto3,enum=ccprotos.QueryToken_Formats" json:"format,omitempty"`
	Addr   *protos.TxAddr     `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *QueryToken) Reset() {
	*x = QueryToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryToken) ProtoMessage() {}

func (x *QueryToken) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryToken.ProtoReflect.Descriptor instead.
func (*QueryToken) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{1}
}

func (x *QueryToken) GetFormat() QueryToken_Formats {
	if x != nil {
		return x.Format
	}
	return QueryToken_NUMBER
}

func (x *QueryToken) GetAddr() *protos.TxAddr {
	if x != nil {
		return x.Addr
	}
	return nil
}

type QueryTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce []byte `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *QueryTransfer) Reset() {
	*x = QueryTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTransfer) ProtoMessage() {}

func (x *QueryTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTransfer.ProtoReflect.Descriptor instead.
func (*QueryTransfer) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{2}
}

func (x *QueryTransfer) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type QueryGlobal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryGlobal) Reset() {
	*x = QueryGlobal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGlobal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGlobal) ProtoMessage() {}

func (x *QueryGlobal) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGlobal.ProtoReflect.Descriptor instead.
func (*QueryGlobal) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{3}
}

type BaseToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalTokens []byte `protobuf:"bytes,1,opt,name=totalTokens,proto3" json:"totalTokens,omitempty"`
}

func (x *BaseToken) Reset() {
	*x = BaseToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseToken) ProtoMessage() {}

func (x *BaseToken) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseToken.ProtoReflect.Descriptor instead.
func (*BaseToken) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{4}
}

func (x *BaseToken) GetTotalTokens() []byte {
	if x != nil {
		return x.TotalTokens
	}
	return nil
}

type Assign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount []byte         `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	To     *protos.TxAddr `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *Assign) Reset() {
	*x = Assign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assign) ProtoMessage() {}

func (x *Assign) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assign.ProtoReflect.Descriptor instead.
func (*Assign) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{5}
}

func (x *Assign) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Assign) GetTo() *protos.TxAddr {
	if x != nil {
		return x.To
	}
	return nil
}

type FuncRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Noncekey []byte `protobuf:"bytes,1,opt,name=noncekey,proto3" json:"noncekey,omitempty"`
	IsSend   bool   `protobuf:"varint,2,opt,name=isSend,proto3" json:"isSend,omitempty"`
}

func (x *FuncRecord) Reset() {
	*x = FuncRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncRecord) ProtoMessage() {}

func (x *FuncRecord) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncRecord.ProtoReflect.Descriptor instead.
func (*FuncRecord) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{6}
}

func (x *FuncRecord) GetNoncekey() []byte {
	if x != nil {
		return x.Noncekey
	}
	return nil
}

func (x *FuncRecord) GetIsSend() bool {
	if x != nil {
		return x.IsSend
	}
	return false
}

type AccountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance  []byte      `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"` //the amount of user owned token
	LastFund *FuncRecord `protobuf:"bytes,2,opt,name=lastFund,proto3" json:"lastFund,omitempty"`
}

func (x *AccountData) Reset() {
	*x = AccountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountData) ProtoMessage() {}

func (x *AccountData) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountData.ProtoReflect.Descriptor instead.
func (*AccountData) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{7}
}

func (x *AccountData) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *AccountData) GetLastFund() *FuncRecord {
	if x != nil {
		return x.LastFund
	}
	return nil
}

type TransferResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Noncekey []byte                        `protobuf:"bytes,1,opt,name=noncekey,proto3" json:"noncekey,omitempty"`
	From     *TransferResult_AccountStatus `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To       *TransferResult_AccountStatus `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *TransferResult) Reset() {
	*x = TransferResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResult) ProtoMessage() {}

func (x *TransferResult) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResult.ProtoReflect.Descriptor instead.
func (*TransferResult) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{8}
}

func (x *TransferResult) GetNoncekey() []byte {
	if x != nil {
		return x.Noncekey
	}
	return nil
}

func (x *TransferResult) GetFrom() *TransferResult_AccountStatus {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TransferResult) GetTo() *TransferResult_AccountStatus {
	if x != nil {
		return x.To
	}
	return nil
}

type NonceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid     string      `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Amount   []byte      `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	FromLast *FuncRecord `protobuf:"bytes,3,opt,name=fromLast,proto3" json:"fromLast,omitempty"`
	ToLast   *FuncRecord `protobuf:"bytes,4,opt,name=toLast,proto3" json:"toLast,omitempty"`
	// Types that are assignable to Other:
	//	*NonceData_NonceTime
	//	*NonceData_Noncekey
	Other isNonceData_Other `protobuf_oneof:"other"`
}

func (x *NonceData) Reset() {
	*x = NonceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonceData) ProtoMessage() {}

func (x *NonceData) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonceData.ProtoReflect.Descriptor instead.
func (*NonceData) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{9}
}

func (x *NonceData) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *NonceData) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *NonceData) GetFromLast() *FuncRecord {
	if x != nil {
		return x.FromLast
	}
	return nil
}

func (x *NonceData) GetToLast() *FuncRecord {
	if x != nil {
		return x.ToLast
	}
	return nil
}

func (m *NonceData) GetOther() isNonceData_Other {
	if m != nil {
		return m.Other
	}
	return nil
}

func (x *NonceData) GetNonceTime() *timestamp.Timestamp {
	if x, ok := x.GetOther().(*NonceData_NonceTime); ok {
		return x.NonceTime
	}
	return nil
}

func (x *NonceData) GetNoncekey() []byte {
	if x, ok := x.GetOther().(*NonceData_Noncekey); ok {
		return x.Noncekey
	}
	return nil
}

type isNonceData_Other interface {
	isNonceData_Other()
}

type NonceData_NonceTime struct {
	NonceTime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=nonceTime,proto3,oneof"`
}

type NonceData_Noncekey struct {
	Noncekey []byte `protobuf:"bytes,7,opt,name=noncekey,proto3,oneof"`
}

func (*NonceData_NonceTime) isNonceData_Other() {}

func (*NonceData_Noncekey) isNonceData_Other() {}

type TokenGlobalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalTokens      []byte `protobuf:"bytes,10,opt,name=totalTokens,proto3" json:"totalTokens,omitempty"`
	UnassignedTokens []byte `protobuf:"bytes,11,opt,name=unassignedTokens,proto3" json:"unassignedTokens,omitempty"`
}

func (x *TokenGlobalData) Reset() {
	*x = TokenGlobalData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenGlobalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenGlobalData) ProtoMessage() {}

func (x *TokenGlobalData) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenGlobalData.ProtoReflect.Descriptor instead.
func (*TokenGlobalData) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{10}
}

func (x *TokenGlobalData) GetTotalTokens() []byte {
	if x != nil {
		return x.TotalTokens
	}
	return nil
}

func (x *TokenGlobalData) GetUnassignedTokens() []byte {
	if x != nil {
		return x.UnassignedTokens
	}
	return nil
}

type MultiTokenMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenName string `protobuf:"bytes,1,opt,name=tokenName,proto3" json:"tokenName,omitempty"`
	//	bytes tokenMsg = 2;
	//
	// Types that are assignable to Msg:
	//	*MultiTokenMsg_Fund
	//	*MultiTokenMsg_Query
	//	*MultiTokenMsg_Init
	Msg isMultiTokenMsg_Msg `protobuf_oneof:"msg"`
}

func (x *MultiTokenMsg) Reset() {
	*x = MultiTokenMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiTokenMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiTokenMsg) ProtoMessage() {}

func (x *MultiTokenMsg) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiTokenMsg.ProtoReflect.Descriptor instead.
func (*MultiTokenMsg) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{11}
}

func (x *MultiTokenMsg) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (m *MultiTokenMsg) GetMsg() isMultiTokenMsg_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *MultiTokenMsg) GetFund() *SimpleFund {
	if x, ok := x.GetMsg().(*MultiTokenMsg_Fund); ok {
		return x.Fund
	}
	return nil
}

func (x *MultiTokenMsg) GetQuery() *QueryToken {
	if x, ok := x.GetMsg().(*MultiTokenMsg_Query); ok {
		return x.Query
	}
	return nil
}

func (x *MultiTokenMsg) GetInit() *BaseToken {
	if x, ok := x.GetMsg().(*MultiTokenMsg_Init); ok {
		return x.Init
	}
	return nil
}

type isMultiTokenMsg_Msg interface {
	isMultiTokenMsg_Msg()
}

type MultiTokenMsg_Fund struct {
	Fund *SimpleFund `protobuf:"bytes,3,opt,name=fund,proto3,oneof"`
}

type MultiTokenMsg_Query struct {
	Query *QueryToken `protobuf:"bytes,4,opt,name=query,proto3,oneof"`
}

type MultiTokenMsg_Init struct {
	Init *BaseToken `protobuf:"bytes,5,opt,name=init,proto3,oneof"`
}

func (*MultiTokenMsg_Fund) isMultiTokenMsg_Msg() {}

func (*MultiTokenMsg_Query) isMultiTokenMsg_Msg() {}

func (*MultiTokenMsg_Init) isMultiTokenMsg_Msg() {}

type MultiTokenRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Noncekey  []byte `protobuf:"bytes,1,opt,name=noncekey,proto3" json:"noncekey,omitempty"`
	TokenName string `protobuf:"bytes,2,opt,name=tokenName,proto3" json:"tokenName,omitempty"`
}

func (x *MultiTokenRecord) Reset() {
	*x = MultiTokenRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiTokenRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiTokenRecord) ProtoMessage() {}

func (x *MultiTokenRecord) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiTokenRecord.ProtoReflect.Descriptor instead.
func (*MultiTokenRecord) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{12}
}

func (x *MultiTokenRecord) GetNoncekey() []byte {
	if x != nil {
		return x.Noncekey
	}
	return nil
}

func (x *MultiTokenRecord) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

type TransferResult_AccountStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr    *protos.TxAddr `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Balance []byte         `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *TransferResult_AccountStatus) Reset() {
	*x = TransferResult_AccountStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokentx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferResult_AccountStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResult_AccountStatus) ProtoMessage() {}

func (x *TransferResult_AccountStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tokentx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResult_AccountStatus.ProtoReflect.Descriptor instead.
func (*TransferResult_AccountStatus) Descriptor() ([]byte, []int) {
	return file_tokentx_proto_rawDescGZIP(), []int{8, 0}
}

func (x *TransferResult_AccountStatus) GetAddr() *protos.TxAddr {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *TransferResult_AccountStatus) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

var File_tokentx_proto protoreflect.FileDescriptor

var file_tokentx_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x63, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x74, 0x78, 0x61, 0x64, 0x64, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x68, 0x0a, 0x0a, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x46, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x78, 0x41, 0x64, 0x64,
	0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x22, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x78, 0x41,
	0x64, 0x64, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x8a, 0x01, 0x0a, 0x0a, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x63, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x22,
	0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x78, 0x41, 0x64, 0x64, 0x72, 0x52, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x22, 0x22, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x0a, 0x0a,
	0x06, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x43,
	0x4f, 0x44, 0x45, 0x44, 0x10, 0x01, 0x22, 0x25, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x0d, 0x0a,
	0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x22, 0x2d, 0x0a, 0x09,
	0x42, 0x61, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x40, 0x0a, 0x06, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x54, 0x78, 0x41, 0x64, 0x64, 0x72, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x40, 0x0a,
	0x0a, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x22,
	0x59, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x46, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x63, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x22, 0xef, 0x01, 0x0a, 0x0e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x63, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x36, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x63, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x02, 0x74, 0x6f, 0x1a, 0x4d, 0x0a,
	0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22,
	0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x78, 0x41, 0x64, 0x64, 0x72, 0x52, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xfa, 0x01, 0x0a,
	0x09, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4c, 0x61,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x63, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x6f, 0x4c, 0x61,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x63, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06,
	0x74, 0x6f, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x6b, 0x65, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x6b, 0x65, 0x79,
	0x42, 0x07, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x22, 0x5f, 0x0a, 0x0f, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x75, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x75, 0x6e, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x0d, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x66, 0x75,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x63, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x46, 0x75, 0x6e, 0x64, 0x48, 0x00,
	0x52, 0x04, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x42,
	0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x4c, 0x0a, 0x10, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x42, 0x41, 0x5a, 0x3f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x62, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x63,
	0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tokentx_proto_rawDescOnce sync.Once
	file_tokentx_proto_rawDescData = file_tokentx_proto_rawDesc
)

func file_tokentx_proto_rawDescGZIP() []byte {
	file_tokentx_proto_rawDescOnce.Do(func() {
		file_tokentx_proto_rawDescData = protoimpl.X.CompressGZIP(file_tokentx_proto_rawDescData)
	})
	return file_tokentx_proto_rawDescData
}

var file_tokentx_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tokentx_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_tokentx_proto_goTypes = []interface{}{
	(QueryToken_Formats)(0),              // 0: ccprotos.QueryToken.Formats
	(*SimpleFund)(nil),                   // 1: ccprotos.SimpleFund
	(*QueryToken)(nil),                   // 2: ccprotos.QueryToken
	(*QueryTransfer)(nil),                // 3: ccprotos.QueryTransfer
	(*QueryGlobal)(nil),                  // 4: ccprotos.QueryGlobal
	(*BaseToken)(nil),                    // 5: ccprotos.BaseToken
	(*Assign)(nil),                       // 6: ccprotos.Assign
	(*FuncRecord)(nil),                   // 7: ccprotos.FuncRecord
	(*AccountData)(nil),                  // 8: ccprotos.AccountData
	(*TransferResult)(nil),               // 9: ccprotos.TransferResult
	(*NonceData)(nil),                    // 10: ccprotos.NonceData
	(*TokenGlobalData)(nil),              // 11: ccprotos.TokenGlobalData
	(*MultiTokenMsg)(nil),                // 12: ccprotos.MultiTokenMsg
	(*MultiTokenRecord)(nil),             // 13: ccprotos.MultiTokenRecord
	(*TransferResult_AccountStatus)(nil), // 14: ccprotos.TransferResult.AccountStatus
	(*protos.TxAddr)(nil),                // 15: protos.TxAddr
	(*timestamp.Timestamp)(nil),          // 16: google.protobuf.Timestamp
}
var file_tokentx_proto_depIdxs = []int32{
	15, // 0: ccprotos.SimpleFund.to:type_name -> protos.TxAddr
	15, // 1: ccprotos.SimpleFund.from:type_name -> protos.TxAddr
	0,  // 2: ccprotos.QueryToken.format:type_name -> ccprotos.QueryToken.Formats
	15, // 3: ccprotos.QueryToken.addr:type_name -> protos.TxAddr
	15, // 4: ccprotos.Assign.to:type_name -> protos.TxAddr
	7,  // 5: ccprotos.AccountData.lastFund:type_name -> ccprotos.FuncRecord
	14, // 6: ccprotos.TransferResult.from:type_name -> ccprotos.TransferResult.AccountStatus
	14, // 7: ccprotos.TransferResult.to:type_name -> ccprotos.TransferResult.AccountStatus
	7,  // 8: ccprotos.NonceData.fromLast:type_name -> ccprotos.FuncRecord
	7,  // 9: ccprotos.NonceData.toLast:type_name -> ccprotos.FuncRecord
	16, // 10: ccprotos.NonceData.nonceTime:type_name -> google.protobuf.Timestamp
	1,  // 11: ccprotos.MultiTokenMsg.fund:type_name -> ccprotos.SimpleFund
	2,  // 12: ccprotos.MultiTokenMsg.query:type_name -> ccprotos.QueryToken
	5,  // 13: ccprotos.MultiTokenMsg.init:type_name -> ccprotos.BaseToken
	15, // 14: ccprotos.TransferResult.AccountStatus.addr:type_name -> protos.TxAddr
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_tokentx_proto_init() }
func file_tokentx_proto_init() {
	if File_tokentx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tokentx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleFund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGlobal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenGlobalData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiTokenMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiTokenRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokentx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferResult_AccountStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tokentx_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*NonceData_NonceTime)(nil),
		(*NonceData_Noncekey)(nil),
	}
	file_tokentx_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*MultiTokenMsg_Fund)(nil),
		(*MultiTokenMsg_Query)(nil),
		(*MultiTokenMsg_Init)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tokentx_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tokentx_proto_goTypes,
		DependencyIndexes: file_tokentx_proto_depIdxs,
		EnumInfos:         file_tokentx_proto_enumTypes,
		MessageInfos:      file_tokentx_proto_msgTypes,
	}.Build()
	File_tokentx_proto = out.File
	file_tokentx_proto_rawDesc = nil
	file_tokentx_proto_goTypes = nil
	file_tokentx_proto_depIdxs = nil
}
